# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.18)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget xdr-static xdr-shared hdf-static hdf-shared mfhdf-static mfhdf-shared hdp hdp-shared hdfimport hdfimport-shared hdiff hdiff-shared hrepack hrepack-shared)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target xdr-static
add_library(xdr-static STATIC IMPORTED)

set_target_properties(xdr-static PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "\$<\$<OR:\$<PLATFORM_ID:Windows>,\$<PLATFORM_ID:MinGW>>:ws2_32.lib>"
)

# Create imported target xdr-shared
add_library(xdr-shared SHARED IMPORTED)

set_target_properties(xdr-shared PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "H4_BUILT_AS_DYNAMIC_LIB=1"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "\$<\$<OR:\$<PLATFORM_ID:Windows>,\$<PLATFORM_ID:MinGW>>:ws2_32.lib>"
)

# Create imported target hdf-static
add_library(hdf-static STATIC IMPORTED)

set_target_properties(hdf-static PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "N:/Development/Dev_Base/jpeg-9c/vc143/x64/vs2022_Release/jpeg.lib;N:/Development/Dev_Base/zlib-1.2.11/vc143/x64/vs2022_Release/zlib.lib"
)

# Create imported target hdf-shared
add_library(hdf-shared SHARED IMPORTED)

set_target_properties(hdf-shared PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "H4_BUILT_AS_DYNAMIC_LIB=1"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
)

# Create imported target mfhdf-static
add_library(mfhdf-static STATIC IMPORTED)

set_target_properties(mfhdf-static PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "xdr-static;hdf-static"
)

# Create imported target mfhdf-shared
add_library(mfhdf-shared SHARED IMPORTED)

set_target_properties(mfhdf-shared PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "H4_BUILT_AS_DYNAMIC_LIB=1"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "xdr-shared;hdf-shared"
)

# Create imported target hdp
add_executable(hdp IMPORTED)

# Create imported target hdp-shared
add_executable(hdp-shared IMPORTED)

# Create imported target hdfimport
add_executable(hdfimport IMPORTED)

# Create imported target hdfimport-shared
add_executable(hdfimport-shared IMPORTED)

# Create imported target hdiff
add_executable(hdiff IMPORTED)

# Create imported target hdiff-shared
add_executable(hdiff-shared IMPORTED)

# Create imported target hrepack
add_executable(hrepack IMPORTED)

# Create imported target hrepack-shared
add_executable(hrepack-shared IMPORTED)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/hdf4-targets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
